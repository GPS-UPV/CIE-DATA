{
    "status": "SATISFIED",
    "solution": {
        "start_time": [
            [
                292,
                195,
                0
            ],
            [
                389,
                454,
                553
            ],
            [
                674,
                553,
                615
            ],
            [
                760,
                956,
                818
            ],
            [
                818,
                977,
                888
            ]
        ],
        "end_time": [
            [
                389,
                292,
                83
            ],
            [
                454,
                553,
                595
            ],
            [
                760,
                615,
                674
            ],
            [
                818,
                977,
                867
            ],
            [
                888,
                1046,
                977
            ]
        ],
        "SpeedScaling": [
            [
                1,
                1,
                1
            ],
            [
                1,
                1,
                1
            ],
            [
                1,
                1,
                1
            ],
            [
                1,
                1,
                1
            ],
            [
                1,
                1,
                1
            ]
        ],
        "_output_item": "makespan=1046\nenergy=758\nidle=2092\nstart_times = [292, 195, 0, 389, 454, 553, 674, 553, 615, 760, 956, 818, 818, 977, 888]\nend_times =[389, 292, 83, 454, 553, 595, 760, 615, 674, 818, 977, 867, 888, 1046, 977]\nspeed_assignment =[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\ntimepro =[97, 97, 83, 65, 99, 42, 86, 62, 59, 58, 21, 49, 70, 69, 89]\n",
        "_checker": ""
    },
    "statistics": {
        "paths": 0,
        "flatIntVars": 107,
        "flatIntConstraints": 152,
        "evaluatedHalfReifiedConstraints": 60,
        "method": "satisfy",
        "flatTime": 69.218,
        "nodes": 0,
        "solveTime": 89.0,
        "time": 85.0,
        "nSolutions": 1,
        "lower_gap_ini": {
            "lower": 1461,
            "upper": 1903
        },
        "gap_end": {
            "lower": 1461,
            "upper": 1903
        }
    }
}